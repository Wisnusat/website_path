{"ast":null,"code":"var _jsxFileName = \"D:\\\\github-test\\\\website_path\\\\src\\\\components\\\\layout.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\nimport { jsx } from 'theme-ui';\nimport React, { useState } from 'react';\nimport Sticky from 'react-stickynode';\nimport Header from './header/header';\nimport Footer from './footer/footer';\nexport default function Layout(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(false),\n      isSticky = _useState[0],\n      setIsSticky = _useState[1];\n\n  var handleStateChange = function handleStateChange(status) {\n    if (status.status === Sticky.STATUS_FIXED) {\n      setIsSticky(true);\n    } else if (status.status === Sticky.STATUS_ORIGINAL) {\n      setIsSticky(false);\n    }\n  };\n\n  return jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, jsx(Sticky, {\n    innerZ: 1001,\n    top: 0,\n    onStateChange: handleStateChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, jsx(Header, {\n    className: \"\".concat(isSticky ? 'sticky' : 'unSticky'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  })), jsx(\"main\", {\n    id: \"content\",\n    sx: {\n      variant: 'layout.main'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, children), jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(Layout, \"4Xv7pjWiiTNLaJhWZ3dQv4VkgkE=\");\n\n_c = Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["D:/github-test/website_path/src/components/layout.js"],"names":["jsx","React","useState","Sticky","Header","Footer","Layout","children","isSticky","setIsSticky","handleStateChange","status","STATUS_FIXED","STATUS_ORIGINAL","variant"],"mappings":";;;;;AAAA;;AACA;AACA,SAASA,GAAT,QAAoB,UAApB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,eAAe,SAASC,MAAT,OAA8B;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,kBACXL,QAAQ,CAAC,KAAD,CADG;AAAA,MACpCM,QADoC;AAAA,MAC1BC,WAD0B;;AAE3C,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,MAAD,EAAY;AACpC,QAAIA,MAAM,CAACA,MAAP,KAAkBR,MAAM,CAACS,YAA7B,EAA2C;AACzCH,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAFD,MAEO,IAAIE,MAAM,CAACA,MAAP,KAAkBR,MAAM,CAACU,eAA7B,EAA8C;AACnDJ,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,GAND;;AAOA,SACE,IAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,IAAC,MAAD;AAAQ,IAAA,MAAM,EAAE,IAAhB;AAAsB,IAAA,GAAG,EAAE,CAA3B;AAA8B,IAAA,aAAa,EAAEC,iBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,IAAC,MAAD;AAAQ,IAAA,SAAS,YAAKF,QAAQ,GAAG,QAAH,GAAc,UAA3B,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AACE,IAAA,EAAE,EAAC,SADL;AAEE,IAAA,EAAE,EAAE;AACFM,MAAAA,OAAO,EAAE;AADP,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGP,QANH,CAJF,EAYE,IAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAgBD;;GAzBuBD,M;;KAAAA,M","sourcesContent":["/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport { jsx } from 'theme-ui';\r\nimport React, { useState } from 'react';\r\nimport Sticky from 'react-stickynode';\r\nimport Header from './header/header';\r\nimport Footer from './footer/footer';\r\nexport default function Layout({ children }) {\r\n  const [isSticky, setIsSticky] = useState(false);\r\n  const handleStateChange = (status) => {\r\n    if (status.status === Sticky.STATUS_FIXED) {\r\n      setIsSticky(true);\r\n    } else if (status.status === Sticky.STATUS_ORIGINAL) {\r\n      setIsSticky(false);\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Sticky innerZ={1001} top={0} onStateChange={handleStateChange}>\r\n        <Header className={`${isSticky ? 'sticky' : 'unSticky'}`} />\r\n      </Sticky>\r\n      <main\r\n        id=\"content\"\r\n        sx={{\r\n          variant: 'layout.main',\r\n        }}\r\n      >\r\n        {children}\r\n      </main>\r\n      <Footer />\r\n    </React.Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}