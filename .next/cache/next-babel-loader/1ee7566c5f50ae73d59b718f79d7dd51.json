{"ast":null,"code":"var _jsxFileName = \"D:\\\\github-test\\\\website_path\\\\src\\\\sections\\\\subscribe.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\nimport { useRef, useState } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { jsx } from 'theme-ui';\nimport { Container, Flex, Box, Button, Input, Text, Heading } from 'theme-ui';\nexport default function Subscribe() {\n  // 1. Create a reference to the input so we can fetch/clear it's value.\n  const inputEl = useRef(null); // 2. Hold a status in state to handle the response from our API.\n\n  const {\n    0: status,\n    1: setStatus\n  } = useState({\n    submitted: false,\n    submitting: false,\n    info: {\n      error: false,\n      msg: null\n    }\n  });\n\n  const handleMailChimpResponse = (errorMsg, successMsg) => {\n    if (errorMsg) {\n      // 4. If there was an error, update the message in state.\n      setStatus({\n        info: {\n          error: true,\n          msg: errorMsg\n        }\n      });\n      return;\n    } // 5. Clear the input value and show a success message.\n\n\n    setStatus({\n      submitted: true,\n      submitting: false,\n      info: {\n        error: false,\n        msg: successMsg\n      }\n    });\n    inputEl.current.value = '';\n  };\n\n  const handleSendGridResponse = (status, msg) => {\n    if (status === 200) {\n      // 5. Clear the input value and show a success message.\n      setStatus({\n        submitted: true,\n        submitting: false,\n        info: {\n          error: false,\n          msg: msg\n        }\n      });\n      inputEl.current.value = '';\n    } else {\n      setStatus({\n        info: {\n          error: true,\n          msg: msg\n        }\n      });\n    }\n  };\n\n  const subscribe = async e => {\n    e.preventDefault();\n    setStatus(prevStatus => _objectSpread(_objectSpread({}, prevStatus), {}, {\n      submitting: true\n    })); // 3. Send a request to our API with the user's email address.\n\n    const res = await fetch('/api/subscribe', {\n      body: JSON.stringify({\n        email: inputEl.current.value\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST'\n    }); //for mailChimp integration\n\n    const {\n      error\n    } = await res.json();\n    handleMailChimpResponse(error, 'Success! ðŸŽ‰ You are now subscribed to the newsletter.'); // For sendGrid integration\n\n    const text = await res.text();\n    handleSendGridResponse(res.status, text);\n  };\n\n  return jsx(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, jsx(Box, {\n    sx: styles.contentBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, jsx(Box, {\n    sx: styles.contentBoxInner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, jsx(Heading, {\n    as: \"h2\",\n    sx: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Subscribe to our Blog\"), jsx(Text, {\n    as: \"p\",\n    sx: styles.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Lorem ipsum dolor sit amet consectetur adipisicing elitsed eiusmod tempor incididunt labore dolore.\"), jsx(\"form\", {\n    onSubmit: subscribe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, jsx(Flex, {\n    sx: styles.subscribeForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, jsx(\"label\", {\n    htmlFor: \"email\",\n    sx: {\n      variant: 'styles.srOnly'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"Email Address\"), jsx(Input, {\n    ref: inputEl,\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Enter your email address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }), jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, status.info.error && jsx(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, \"Error: \", status.info.msg), !status.info.error && status.info.msg && jsx(\"div\", {\n    className: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, status.info.msg)), jsx(Button, {\n    type: \"submit\",\n    disabled: status.submitting,\n    className: \"subscribe__btn\",\n    \"aria-label\": \"Subscribe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, !status.submitting ? !status.submitted ? 'Subscribe' : 'Submitted' : 'Submitting...')))))));\n}\nconst styles = {\n  contentBox: {\n    backgroundColor: 'primary',\n    textAlign: 'center',\n    borderRadius: 10,\n    py: ['60px', null, 8]\n  },\n  contentBoxInner: {\n    width: ['100%', null, '540px', '600px'],\n    mx: 'auto',\n    mt: -1,\n    px: [3, 5]\n  },\n  title: {\n    fontSize: ['24px', null, '28px', null, null, '32px', null, '36px'],\n    color: 'white',\n    lineHeight: [1.3, null, null, 1.25],\n    fontWeight: '700',\n    letterSpacing: ['-.5px', null, '-1.5px'],\n    mb: [2, 3]\n  },\n  description: {\n    fontSize: ['15px', 2, null, null, null, '17px', null, 3],\n    color: 'white',\n    lineHeight: [1.85, null, null, 2],\n    px: [0, null, 5]\n  },\n  subscribeForm: {\n    mt: [6, null, null, 7],\n    backgroundColor: ['transparent', 'white'],\n    borderRadius: [0, 50],\n    overflow: 'hidden',\n    p: [0, 1],\n    flexDirection: ['column', 'row'],\n    '[type=\"email\"]': {\n      border: 0,\n      borderRadius: 50,\n      fontFamily: 'body',\n      fontSize: ['14px', null, 2],\n      fontWeight: 500,\n      color: 'heading',\n      py: 1,\n      px: [4, null, 6],\n      backgroundColor: ['white', 'transparent'],\n      height: ['52px', null, '60px'],\n      textAlign: ['center', 'left'],\n      '&:focus': {\n        boxShadow: '0 0 0 0px'\n      },\n      '::placeholder': {\n        color: 'primary',\n        opacity: 1\n      }\n    },\n    '.subscribe__btn': {\n      flexShrink: 0,\n      ml: [0, 2],\n      backgroundColor: ['text', 'primary'],\n      mt: [2, 0],\n      py: ['15px']\n    }\n  }\n};","map":{"version":3,"sources":["D:/github-test/website_path/src/sections/subscribe.js"],"names":["useRef","useState","fetch","jsx","Container","Flex","Box","Button","Input","Text","Heading","Subscribe","inputEl","status","setStatus","submitted","submitting","info","error","msg","handleMailChimpResponse","errorMsg","successMsg","current","value","handleSendGridResponse","subscribe","e","preventDefault","prevStatus","res","body","JSON","stringify","email","headers","method","json","text","styles","contentBox","contentBoxInner","title","description","subscribeForm","variant","backgroundColor","textAlign","borderRadius","py","width","mx","mt","px","fontSize","color","lineHeight","fontWeight","letterSpacing","mb","overflow","p","flexDirection","border","fontFamily","height","boxShadow","opacity","flexShrink","ml"],"mappings":"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","sourcesContent":["/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport { useRef, useState } from 'react';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { jsx } from 'theme-ui';\r\nimport { Container, Flex, Box, Button, Input, Text, Heading } from 'theme-ui';\r\n\r\nexport default function Subscribe() {\r\n  // 1. Create a reference to the input so we can fetch/clear it's value.\r\n  const inputEl = useRef(null);\r\n  // 2. Hold a status in state to handle the response from our API.\r\n  const [status, setStatus] = useState({\r\n    submitted: false,\r\n    submitting: false,\r\n    info: { error: false, msg: null },\r\n  });\r\n  const handleMailChimpResponse = (errorMsg, successMsg) => {\r\n    if (errorMsg) {\r\n      // 4. If there was an error, update the message in state.\r\n      setStatus({\r\n        info: { error: true, msg: errorMsg },\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    // 5. Clear the input value and show a success message.\r\n    setStatus({\r\n      submitted: true,\r\n      submitting: false,\r\n      info: { error: false, msg: successMsg },\r\n    });\r\n    inputEl.current.value = '';\r\n  };\r\n\r\n  const handleSendGridResponse = (status, msg) => {\r\n    if (status === 200) {\r\n      // 5. Clear the input value and show a success message.\r\n      setStatus({\r\n        submitted: true,\r\n        submitting: false,\r\n        info: { error: false, msg: msg },\r\n      });\r\n      inputEl.current.value = '';\r\n    } else {\r\n      setStatus({\r\n        info: { error: true, msg: msg },\r\n      });\r\n    }\r\n  };\r\n  const subscribe = async (e) => {\r\n    e.preventDefault();\r\n    setStatus((prevStatus) => ({ ...prevStatus, submitting: true }));\r\n\r\n    // 3. Send a request to our API with the user's email address.\r\n    const res = await fetch('/api/subscribe', {\r\n      body: JSON.stringify({\r\n        email: inputEl.current.value,\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      method: 'POST',\r\n    });\r\n    //for mailChimp integration\r\n    const { error } = await res.json();\r\n    handleMailChimpResponse(\r\n      error,\r\n      'Success! ðŸŽ‰ You are now subscribed to the newsletter.'\r\n    );\r\n    // For sendGrid integration\r\n    const text = await res.text();\r\n    handleSendGridResponse(res.status, text);\r\n  };\r\n  return (\r\n    <section>\r\n      <Container>\r\n        <Box sx={styles.contentBox}>\r\n          <Box sx={styles.contentBoxInner}>\r\n            <Heading as=\"h2\" sx={styles.title}>\r\n              Subscribe to our Blog\r\n            </Heading>\r\n            <Text as=\"p\" sx={styles.description}>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elitsed eiusmod\r\n              tempor incididunt labore dolore.\r\n            </Text>\r\n            <form onSubmit={subscribe}>\r\n              <Flex sx={styles.subscribeForm}>\r\n                <label htmlFor=\"email\" sx={{ variant: 'styles.srOnly' }}>\r\n                  Email Address\r\n                </label>\r\n                <Input\r\n                  ref={inputEl}\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Enter your email address\"\r\n                />\r\n\r\n                <div>\r\n                  {status.info.error && (\r\n                    <div className=\"error\">Error: {status.info.msg}</div>\r\n                  )}\r\n                  {!status.info.error && status.info.msg && (\r\n                    <div className=\"success\">{status.info.msg}</div>\r\n                  )}\r\n                </div>\r\n                <Button\r\n                  type=\"submit\"\r\n                  disabled={status.submitting}\r\n                  className=\"subscribe__btn\"\r\n                  aria-label=\"Subscribe\"\r\n                >\r\n                  {!status.submitting\r\n                    ? !status.submitted\r\n                      ? 'Subscribe'\r\n                      : 'Submitted'\r\n                    : 'Submitting...'}\r\n                </Button>\r\n              </Flex>\r\n            </form>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </section>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  contentBox: {\r\n    backgroundColor: 'primary',\r\n    textAlign: 'center',\r\n    borderRadius: 10,\r\n    py: ['60px', null, 8],\r\n  },\r\n  contentBoxInner: {\r\n    width: ['100%', null, '540px', '600px'],\r\n    mx: 'auto',\r\n    mt: -1,\r\n    px: [3, 5],\r\n  },\r\n  title: {\r\n    fontSize: ['24px', null, '28px', null, null, '32px', null, '36px'],\r\n    color: 'white',\r\n    lineHeight: [1.3, null, null, 1.25],\r\n    fontWeight: '700',\r\n    letterSpacing: ['-.5px', null, '-1.5px'],\r\n    mb: [2, 3],\r\n  },\r\n  description: {\r\n    fontSize: ['15px', 2, null, null, null, '17px', null, 3],\r\n    color: 'white',\r\n    lineHeight: [1.85, null, null, 2],\r\n    px: [0, null, 5],\r\n  },\r\n  subscribeForm: {\r\n    mt: [6, null, null, 7],\r\n    backgroundColor: ['transparent', 'white'],\r\n    borderRadius: [0, 50],\r\n    overflow: 'hidden',\r\n    p: [0, 1],\r\n    flexDirection: ['column', 'row'],\r\n    '[type=\"email\"]': {\r\n      border: 0,\r\n      borderRadius: 50,\r\n      fontFamily: 'body',\r\n      fontSize: ['14px', null, 2],\r\n      fontWeight: 500,\r\n      color: 'heading',\r\n      py: 1,\r\n      px: [4, null, 6],\r\n      backgroundColor: ['white', 'transparent'],\r\n      height: ['52px', null, '60px'],\r\n      textAlign: ['center', 'left'],\r\n      '&:focus': {\r\n        boxShadow: '0 0 0 0px',\r\n      },\r\n      '::placeholder': {\r\n        color: 'primary',\r\n        opacity: 1,\r\n      },\r\n    },\r\n    '.subscribe__btn': {\r\n      flexShrink: 0,\r\n      ml: [0, 2],\r\n      backgroundColor: ['text', 'primary'],\r\n      mt: [2, 0],\r\n      py: ['15px'],\r\n    },\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}